services:
  # ==============================
  # Database Services
  # ==============================
  db:
    image: mariadb:10.11
    container_name: nextcloud-db
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    environment:
      - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MARIADB_DATABASE=${MYSQL_DATABASE}
      - MARIADB_USER=${MYSQL_USER}
      - MARIADB_PASSWORD=${MYSQL_PASSWORD}
      - TZ=${TZ}
    volumes:
      - ./db:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -p${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 10s
      timeout: 5s
      retries: 10
    dns:
      - 172.18.0.30  # CoreDNS
    networks:
      proxy_net_next:
        ipv4_address: 172.18.0.10

  redis:
    image: redis:7-alpine
    container_name: nextcloud-redis
    restart: unless-stopped
    command: >
      sh -c '
      if [ -n "$REDIS_PASSWORD" ]; then
        exec redis-server --appendonly yes --requirepass "$REDIS_PASSWORD";
      else
        exec redis-server --appendonly yes;
      fi'
    environment:
      - TZ=${TZ}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./redis:/data
    healthcheck:
      test: ["CMD-SHELL", "if [ -n \"$REDIS_PASSWORD\" ]; then redis-cli -a \"$REDIS_PASSWORD\" ping; else redis-cli ping; fi"]
      interval: 10s
      timeout: 5s
      retries: 10
    dns:
      - 172.18.0.30  # CoreDNS
    networks:
      proxy_net_next:
        ipv4_address: 172.18.0.11

  # ==============================
  # Application Services
  # ==============================
  nextcloud:
    image: nextcloud:apache
    container_name: nextcloud-app
    restart: unless-stopped
    # No exponer puerto directamente ya que usamos nginx-proxy
    # ports:
    #   - "${NEXTCLOUD_HTTP_PORT}:80"
    environment:
      - MYSQL_HOST=db
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_HOST_PASSWORD=${REDIS_PASSWORD}
      - PHP_MEMORY_LIMIT=${PHP_MEMORY_LIMIT}
      - PHP_UPLOAD_LIMIT=${PHP_UPLOAD_LIMIT}
      - TZ=${TZ}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - OVERWRITEHOST=${OVERWRITEHOST}
      - NEXTCLOUD_DATA_DIR=/var/www/html/data
      - APACHE_DISABLE_REWRITE_IP=1
    volumes:
      - ./nextcloud:/var/www/html
      - ./nextcloud_data:/var/www/html/data
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    dns:
      - 172.18.0.30  # CoreDNS
    networks:
      proxy_net_next:
        ipv4_address: 172.18.0.20

  # ==============================
  # Network Services
  # ==============================
  coredns:
    image: coredns/coredns:1.11.1
    container_name: coredns
    restart: unless-stopped
    ports:
      - "53:53/udp"
      - "53:53/tcp"
      - "9153:9153/tcp"
    volumes:
      - ./coredns/Corefile:/Corefile:ro
      - ./coredns/zones:/zones:ro
    command: ["-conf", "/Corefile"]
    networks:
      proxy_net_next:
        ipv4_address: 172.18.0.30

  nginx-proxy:
    build:
      context: ./proxy-nginx
      dockerfile: DockerFile
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxy-nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./swag-config/etc/letsencrypt/live/nextcloud.net:/etc/nginx/certs/nextcloud.net:ro
    depends_on:
      - nextcloud
    dns:
      - 172.18.0.30  # CoreDNS
    networks:
      proxy_net_next:
        ipv4_address: 172.18.0.31

  # ==============================
  # Management Services
  # ==============================
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"      # UI web
      - "9443:9443"      # UI web (HTTPS)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    dns:
      - 172.18.0.30  # CoreDNS
    networks:
      proxy_net_next:
        ipv4_address: 172.18.0.40

  # ==============================
  # Desktop Services
  # ==============================
  ubuntu-desktop-cliente-A:
    image: dorowu/ubuntu-desktop-lxde-vnc
    container_name: ubuntu-desktopA
    restart: unless-stopped
    ports:
      - "6080:80"     # noVNC (web)
      - "5901:5901"   # VNC opcional
    environment:
      - TZ=America/El_Salvador
      - USER=ubuntu
      - PASSWORD=MiPasswordFuerte123
      - RESOLUTION=1366x768
    volumes:
      - ./dataA:/home/ubuntu
    shm_size: "2gb"
    dns:
      - 172.18.0.30  # CoreDNS
    networks:
      proxy_net_next:
        ipv4_address: 172.18.0.50

  ubuntu-desktop-cliente-B:
    image: dorowu/ubuntu-desktop-lxde-vnc
    container_name: ubuntu-desktopB
    restart: unless-stopped
    ports:
      - "6081:80"     # noVNC (web)
      - "5902:5901"   # VNC opcional
    environment:
      - TZ=America/El_Salvador
      - USER=ubuntu
      - PASSWORD=MiPasswordFuerte123
      - RESOLUTION=1366x768
    volumes:
      - ./dataB:/home/ubuntu
    shm_size: "2gb"
    dns:
      - 172.18.0.30  # CoreDNS
    networks:
      proxy_net_next:
        ipv4_address: 172.18.0.51

  ubuntu-desktop-cliente-C:
    image: dorowu/ubuntu-desktop-lxde-vnc
    container_name: ubuntu-desktopC
    restart: unless-stopped
    ports:
      - "6082:80"     # noVNC (web)
      - "5903:5901"   # VNC opcional
    environment:
      - TZ=America/El_Salvador
      - USER=ubuntu
      - PASSWORD=MiPasswordFuerte123
      - RESOLUTION=1366x768
    volumes:
      - ./dataC:/home/ubuntu
    shm_size: "2gb"
    dns:
      - 172.18.0.30  # CoreDNS
    networks:
      proxy_net_next:
        ipv4_address: 172.18.0.52

  # ==============================
  # Generador de Certificados SSL Autofirmados (Opcional)
  # Descomenta este servicio si prefieres generar certificados usando Docker Compose
  #ssl-cert-generator:
  #  build:
  #    context: ./self-signed-certs
  #    dockerfile: Dockerfile
  #  container_name: ssl-cert-generator
  #  volumes:
  #    - ./swag-config/etc/letsencrypt/live/nextcloud.net:/output
  #  restart: "no"  # Solo ejecuta una vez
  #  profiles:
  #    - tools     # Solo se ejecuta cuando se especifica el perfil 'tools'

  # ==============================
  # SWAG/Let's Encrypt (Deshabilitado - usando certificados autofirmados)
  #letsencrypt:
  #  image: lscr.io/linuxserver/swag:latest
  #  container_name: swag-letsencrypt
  #  restart: unless-stopped
  #  cap_add:
  #    - NET_ADMIN
  #  environment:
  #    - PUID=1000
  #    - PGID=1000
  #    - TZ=America/El_Salvador
  #    - URL=nextcloud.net
  #    - SUBDOMAINS=wildcard           # SWAG usa esta ruta: /config/etc/letsencrypt/live/nextcloud.net/
  #    - VALIDATION=dns                # se ignora si ya existen los .pem en la ruta esperada
  #    - DNSPLUGIN=cloudflare
  #    - EMAIL=admin@nextcloud.net
  #    - STAGING=true                  # certificados de prueba (si en algún momento intentara ACME)
  #  volumes:
  #    - ./swag-config:/config         # <— MONTA TODO /config
  #  networks:
  #    - proxy_net_next
  #  ports:
  #    - "443:443"                     # recuerda exponer 443 si será reverse proxy       

volumes:
  portainer_data:


networks:
  proxy_net_next:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
          gateway: 172.18.0.1